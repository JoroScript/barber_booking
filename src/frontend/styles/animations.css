/* animations.css */

/* Wave animation for text */
@keyframes wave {
  0%, 100% {
    transform: translateY(0);
  }
  50% {
    transform: translateY(-5px);
  }
}

.animate-wave {
  animation: wave 2s ease-in-out infinite;
  display: inline-block;
}

/* Float animation for hatchets with physics feel */
@keyframes float {
  0% {
    transform: translateY(0) rotate(0deg);
  }
  25% {
    transform: translateY(-10px) rotate(2deg);
  }
  50% {
    transform: translateY(-15px) rotate(-1deg);
  }
  75% {
    transform: translateY(-5px) rotate(1deg);
  }
  100% {
    transform: translateY(0) rotate(0deg);
  }
}

/* Rotation animation for hatchets with variable speed */
@keyframes rotate {
  0% {
    transform: rotate(0deg);
  }
  25% {
    transform: rotate(95deg);
  }
  50% {
    transform: rotate(180deg);
  }
  75% {
    transform: rotate(265deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

/* Swing animation for hatchets */
@keyframes swing {
  0% {
    transform: rotate(-10deg);
  }
  50% {
    transform: rotate(10deg);
  }
  100% {
    transform: rotate(-10deg);
  }
}

/* Grid pattern background */
.bg-grid-pattern {
  background-image: 
    linear-gradient(rgba(255, 255, 255, 0.05) 1px, transparent 1px),
    linear-gradient(90deg, rgba(255, 255, 255, 0.05) 1px, transparent 1px);
  background-size: 20px 20px;
}

/* Physics-based animations */
@keyframes floatAndSpin {
  0% {
    transform: translateY(0) rotate(0deg);
  }
  25% {
    transform: translateY(-15px) rotate(90deg);
  }
  50% {
    transform: translateY(-5px) rotate(180deg);
  }
  75% {
    transform: translateY(-20px) rotate(270deg);
  }
  100% {
    transform: translateY(0) rotate(360deg);
  }
}

@keyframes swingAndFloat {
  0% {
    transform: translateY(0) rotate(-15deg);
  }
  25% {
    transform: translateY(-10px) rotate(5deg);
  }
  50% {
    transform: translateY(-15px) rotate(15deg);
  }
  75% {
    transform: translateY(-5px) rotate(0deg);
  }
  100% {
    transform: translateY(0) rotate(-15deg);
  }
}

/* Text gradient */
.text-gradient {
  background: linear-gradient(to right, #f5d76e, #f9a825);
  -webkit-background-clip: text;
  background-clip: text;
  color: transparent;
  display: inline-block;
  text-shadow: 0 0 10px rgba(249, 168, 37, 0.3);
}

/* Long duration transitions */
.duration-1500 {
  transition-duration: 1500ms;
}

.duration-10000 {
  transition-duration: 10000ms;
}

/* Delay utilities */
.delay-100 {
  transition-delay: 100ms;
}

.delay-200 {
  transition-delay: 200ms;
}

.delay-300 {
  transition-delay: 300ms;
}

.delay-400 {
  transition-delay: 400ms;
}

.delay-500 {
  transition-delay: 500ms;
}

.delay-600 {
  transition-delay: 600ms;
}

.delay-700 {
  transition-delay: 700ms;
}

.delay-800 {
  transition-delay: 800ms;
}

.delay-900 {
  transition-delay: 900ms;
}

.delay-1000 {
  transition-delay: 1000ms;
}

/* Pulse animation */
@keyframes pulse {
  0%, 100% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.05);
  }
}

.animate-pulse-slow {
  animation: pulse 3s ease-in-out infinite;
}

/* Shine animation */
@keyframes shine {
  0% {
    left: -100%;
  }
  100% {
    left: 100%;
  }
}

.animate-shine {
  animation: shine 2s infinite;
}

/* Fade in animation */
@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

.animate-fade-in {
  animation: fadeIn 1s ease-out forwards;
}

/* Slide in animations */
@keyframes slideInFromLeft {
  from {
    transform: translateX(-30px);
    opacity: 0;
  }
  to {
    transform: translateX(0);
    opacity: 1;
  }
}

.animate-slide-in-left {
  animation: slideInFromLeft 0.5s ease-out forwards;
}

@keyframes slideInFromRight {
  from {
    transform: translateX(30px);
    opacity: 0;
  }
  to {
    transform: translateX(0);
    opacity: 1;
  }
}

.animate-slide-in-right {
  animation: slideInFromRight 0.5s ease-out forwards;
}

@keyframes slideInFromTop {
  from {
    transform: translateY(-30px);
    opacity: 0;
  }
  to {
    transform: translateY(0);
    opacity: 1;
  }
}

.animate-slide-in-top {
  animation: slideInFromTop 0.5s ease-out forwards;
}

@keyframes slideInFromBottom {
  from {
    transform: translateY(30px);
    opacity: 0;
  }
  to {
    transform: translateY(0);
    opacity: 1;
  }
}

.animate-slide-in-bottom {
  animation: slideInFromBottom 0.5s ease-out forwards;
}

/* Animation classes for the new physics-based animations */
.animate-float-and-spin {
  animation: floatAndSpin 8s ease-in-out infinite;
}

.animate-swing-and-float {
  animation: swingAndFloat 6s ease-in-out infinite;
} 